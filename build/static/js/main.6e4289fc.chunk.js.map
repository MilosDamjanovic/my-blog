{"version":3,"sources":["pages/HomePage.js","pages/article-content.js","components/ArticlesList.js","components/CommentsList.js","components/UpvotesSection.js","pages/NotFound.js","components/AddCommentForm.js","pages/ArticlePage.js","pages/AboutPage.js","pages/ArticlesListPage.js","Navbar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","articles","name","title","content","ArticlesList","map","article","key","className","to","substring","CommentsList","comments","comment","username","text","UpvotesSection","articleName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","id","onClick","NotFoundPage","AddCommentForm","useState","setUsername","commentText","setCommentText","addComment","JSON","stringify","headers","type","value","onChange","event","target","rows","cols","ArticlePage","match","params","articleContent","find","articleInfo","useEffect","console","log","fetchData","NotFound","otherArticles","filter","paragraph","AboutPage","ArticlesListPage","Navbar","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6e4289fc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst HomePage = () => (    \r\n    <>\r\n        <h1> Home  page </h1>\r\n        <p>\r\n            loremSunt qui consequat aute deserunt voluptate ullamco velit magna est duis exercitation est esse. Esse esse et consequat laboris sint culpa amet. Minim non magna nisi est consequat culpa dolor nostrud occaecat ipsum non officia laborum.\r\n            Eu magna aliquip laborum ut incididunt et Lorem aliquip. Sint non labore proident elit cillum excepteur ea nulla. Incididunt tempor sint est sit dolor nisi qui do in qui. Ea ipsum sint velit aute voluptate. Fugiat et cupidatat qui ut pariatur id cillum tempor in laborum sit ex consequat. In sit in non ad id voluptate reprehenderit ea.\r\n            Occaecat et ea Lorem id exercitation ea non amet id commodo adipisicing ullamco. Ad eiusmod commodo enim velit mollit amet ipsum anim dolor minim minim fugiat sunt. Dolore anim laborum adipisicing eiusmod. Ullamco in eu consectetur eu sunt.\r\n            Voluptate elit adipisicing et ex consectetur ut laborum esse Lorem proident nisi exercitation. Est officia consequat qui velit officia incididunt do. Minim adipisicing anim pariatur aliquip aliquip officia nostrud do cillum nulla anim et. Do qui ad non non sint culpa veniam laborum proident. Nulla laboris adipisicing aliquip irure nisi cupidatat. Excepteur irure ea aliqua officia ullamco.\r\n        </p>\r\n        <p>Quis qui cillum do dolore incididunt. Consequat ut ut incididunt sint. Esse adipisicing nisi ea sit laboris magna quis duis tempor fugiat. Lorem reprehenderit aute proident commodo quis minim.\r\n        Labore ad velit velit eiusmod cillum occaecat tempor ea aute minim mollit quis magna occaecat. Cillum eiusmod pariatur ad exercitation incididunt magna eiusmod dolor do sit. Fugiat culpa sint laboris quis et.\r\n        Reprehenderit aute eu labore velit adipisicing ullamco aliquip. Deserunt qui magna reprehenderit consequat esse reprehenderit ut officia. Amet do voluptate aliquip tempor consequat veniam aute enim esse consequat deserunt sunt Lorem irure. Sunt proident consectetur commodo anim ad nostrud excepteur non minim ex do. Dolor quis elit est fugiat velit dolor consectetur Lorem non sit cupidatat velit.\r\n        Laborum aute est magna sint. Nulla proident qui nulla deserunt sint ex adipisicing culpa adipisicing veniam ut. Deserunt eiusmod aliqua elit enim elit enim elit ea duis cupidatat veniam ipsum in. Esse sint Lorem non pariatur. Sunt culpa dolore veniam cupidatat enim sint aute ipsum incididunt qui magna consectetur nostrud do. Ea magna reprehenderit dolore irure aliquip dolore tempor ullamco. Laboris Lorem adipisicing est amet do esse aute dolor duis quis laborum aute ea culpa.</p>\r\n\r\n        <p>\r\n            Duis culpa occaecat mollit est dolore laboris commodo do est id. Proident consectetur commodo nostrud ex dolor enim laboris excepteur. Laboris cillum qui anim anim deserunt nostrud sunt est commodo duis ullamco tempor. Tempor cupidatat voluptate mollit in laboris et veniam duis elit ut sunt veniam. Ad deserunt veniam tempor veniam veniam pariatur pariatur mollit elit cupidatat occaecat ad enim ipsum.\r\n            Qui aute elit do cupidatat ullamco irure duis enim magna duis laborum ipsum. Nostrud ipsum laborum adipisicing officia excepteur dolore laborum non mollit. Est id laborum reprehenderit aute id enim adipisicing ullamco sint cillum veniam sit ex. Anim ut mollit anim do pariatur adipisicing laborum aute. Proident ipsum est deserunt ipsum Lorem cillum ad ex irure Lorem laborum. Ea non laborum pariatur Lorem non est incididunt. Velit aliquip veniam esse elit in.\r\n        </p>\r\n    </>\r\n\r\n);\r\n\r\nexport default HomePage;","const articles = [\r\n    {\r\n        name: 'learn-react',\r\n        title: 'The Fastest Way to Learn React',\r\n        content: [\r\n            `Welcome! Today we're going to be talking about the fastest way to\r\n            learn React. We'll be discussing some topics such as proin congue\r\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \r\n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \r\n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \r\n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \r\n            sodales purus euismod.`,\r\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n        ]\r\n    }, {\r\n        name: 'learn-node',\r\n        title: 'How to Build a Node Server in 10 Minutes',\r\n        content: [\r\n            `In this article, we're going to be talking looking at a very quick way\r\n            to set up a Node.js server. We'll be discussing some topics such as proin congue\r\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \r\n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \r\n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \r\n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \r\n            sodales purus euismod.`,\r\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n        ]\r\n    }, {\r\n        name: 'my-thoughts-on-resumes',\r\n        title: 'My Thoughts on Resumes',\r\n        content: [\r\n            `Today is the day I talk about something which scares most people: resumes.\r\n            In reality, I'm not sure why people have such a hard time with proin congue\r\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \r\n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \r\n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \r\n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \r\n            sodales purus euismod.`,\r\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n        ]\r\n    },\r\n];\r\n\r\nexport default articles;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ArticlesList = ({ articles }) => (\r\n    <>\r\n        {articles.map((article, key) => (\r\n            <Link className=\"article-list-item\" key={key} to={`/article/${article.name}`}>\r\n                <h3>{article.title}</h3>\r\n                <p>{article.content[0].substring(0, 150)}...</p>\r\n            </Link>\r\n        ))}\r\n    </>\r\n);\r\n\r\nexport default ArticlesList;","import React from 'react';\r\n\r\nconst CommentsList = ({ comments }) => (\r\n    <>\r\n    <h3>Cmments</h3>\r\n        {comments.map((comment, key) => (\r\n            <div className=\"comment\" key={key}>\r\n                <h4>{comment.username}</h4>\r\n                <p>{comment.text}</p>\r\n            </div>\r\n        ))}\r\n    </>\r\n);\r\n\r\nexport default CommentsList;","import React from 'react'\r\n\r\nconst UpvotesSection = ({articleName, upvotes, setArticleInfo}) => {\r\n    const upvoteArticle  = async () => {\r\n       const result =  await fetch(`/api/articles/${articleName}/upvote`, {\r\n            method: 'post',\r\n\r\n        })\r\n        const body = await result.json();\r\n        setArticleInfo(body);\r\n    }\r\n    return (\r\n        <div id=\"upvotes-section\">\r\n            <button onClick={() => upvoteArticle()}>Add Upvote</button>\r\n            <p> This post has been upvoted {upvotes} times </p>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default UpvotesSection;","import React from 'react'\r\n\r\nconst NotFoundPage = () => (\r\n    <h1> 404 Page not found</h1>\r\n)\r\n\r\nexport default NotFoundPage;","import React, {useState} from 'react'\r\n\r\nconst AddCommentForm = ({articleName, setArticleInfo}) => {\r\n    const [username, setUsername] = useState('')\r\n    const [commentText, setCommentText] = useState('');\r\n\r\n    const addComment = async () => {\r\n        const result = await fetch(`/api/articles/${articleName}/add-comment`, {\r\n            method: 'post',\r\n            body: JSON.stringify({ username, text: commentText }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n        const body = await result.json();\r\n        setArticleInfo(body);\r\n        setUsername('');\r\n        setCommentText('');\r\n    }\r\n\r\n    return (\r\n        <div id=\"add-comment-form\">\r\n        <h3> Add a comment </h3>\r\n        <label>\r\n            Name: \r\n            <input type=\"text\" value={username} onChange={ (event) => setUsername(event.target.value)} />\r\n        </label>\r\n        <label>\r\n            Comment: \r\n            <textarea rows=\"4\" cols=\"50\" value={commentText} onChange={(event) => setCommentText(event.target.value)} />\r\n        </label>\r\n            <button onClick={() => addComment()}>Add Comment</button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default AddCommentForm;","import React, {useState, useEffect} from 'react';\r\n\r\nimport articleContent from './article-content';\r\nimport ArticlesList from '../components/ArticlesList';\r\nimport CommentsList from '../components/CommentsList';\r\nimport UpvotesSection from '../components/UpvotesSection';\r\nimport NotFoundPage from './NotFound';\r\nimport AddCommentForm from '../components/AddCommentForm';\r\n\r\nconst ArticlePage = ({ match }) => {\r\n    const name = match.params.name;\r\n    const article = articleContent.find(article => article\r\n        .name === name);\r\n    \r\n        const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await fetch(`/api/articles/${name}`);\r\n            const body = await result.json();\r\n            console.log(body);\r\n            setArticleInfo(body);\r\n        }\r\n        fetchData();\r\n    }, [name]);\r\n    //whenever we change between articles we will re render the artivlePage and useEffect will be called\r\n\r\n\r\n    if (!article) return <NotFoundPage />\r\n\r\n    const otherArticles = articleContent.filter(article => article.name !== name);\r\n\r\n    return (\r\n            <>\r\n                <h1> {article.title} !</h1>\r\n            <UpvotesSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo} />\r\n            {article.content.map((paragraph, key) => (\r\n                <p key={key}> {paragraph} </p>\r\n            ))}\r\n            <CommentsList comments={articleInfo.comments} />\r\n            <AddCommentForm articleName={name} setArticleInfo={setArticleInfo} />\r\n            <h3>Other articles</h3>\r\n            <ArticlesList articles={otherArticles} />\r\n            </>\r\n        )\r\n    }\r\n\r\nexport default ArticlePage;","import React from 'react';\r\n\r\nconst AboutPage = () => (\r\n    <>\r\n        <h1> Hello, welcome to my blog!</h1>\r\n        <p>\r\n        loremSunt qui consequat aute deserunt voluptate ullamco velit magna est duis exercitation est esse. Esse esse et consequat laboris sint culpa amet. Minim non magna nisi est consequat culpa dolor nostrud occaecat ipsum non officia laborum.\r\n        Eu magna aliquip laborum ut incididunt et Lorem aliquip. Sint non labore proident elit cillum excepteur ea nulla. Incididunt tempor sint est sit dolor nisi qui do in qui. Ea ipsum sint velit aute voluptate. Fugiat et cupidatat qui ut pariatur id cillum tempor in laborum sit ex consequat. In sit in non ad id voluptate reprehenderit ea.\r\n        Occaecat et ea Lorem id exercitation ea non amet id commodo adipisicing ullamco. Ad eiusmod commodo enim velit mollit amet ipsum anim dolor minim minim fugiat sunt. Dolore anim laborum adipisicing eiusmod. Ullamco in eu consectetur eu sunt.\r\n        Voluptate elit adipisicing et ex consectetur ut laborum esse Lorem proident nisi exercitation. Est officia consequat qui velit officia incididunt do. Minim adipisicing anim pariatur aliquip aliquip officia nostrud do cillum nulla anim et. Do qui ad non non sint culpa veniam laborum proident. Nulla laboris adipisicing aliquip irure nisi cupidatat. Excepteur irure ea aliqua officia ullamco.\r\n        </p>\r\n        <p>Quis qui cillum do dolore incididunt. Consequat ut ut incididunt sint. Esse adipisicing nisi ea sit laboris magna quis duis tempor fugiat. Lorem reprehenderit aute proident commodo quis minim.\r\n        Labore ad velit velit eiusmod cillum occaecat tempor ea aute minim mollit quis magna occaecat. Cillum eiusmod pariatur ad exercitation incididunt magna eiusmod dolor do sit. Fugiat culpa sint laboris quis et.\r\n        Reprehenderit aute eu labore velit adipisicing ullamco aliquip. Deserunt qui magna reprehenderit consequat esse reprehenderit ut officia. Amet do voluptate aliquip tempor consequat veniam aute enim esse consequat deserunt sunt Lorem irure. Sunt proident consectetur commodo anim ad nostrud excepteur non minim ex do. Dolor quis elit est fugiat velit dolor consectetur Lorem non sit cupidatat velit.\r\n        Laborum aute est magna sint. Nulla proident qui nulla deserunt sint ex adipisicing culpa adipisicing veniam ut. Deserunt eiusmod aliqua elit enim elit enim elit ea duis cupidatat veniam ipsum in. Esse sint Lorem non pariatur. Sunt culpa dolore veniam cupidatat enim sint aute ipsum incididunt qui magna consectetur nostrud do. Ea magna reprehenderit dolore irure aliquip dolore tempor ullamco. Laboris Lorem adipisicing est amet do esse aute dolor duis quis laborum aute ea culpa.</p>\r\n\r\n        <p>\r\n        Duis culpa occaecat mollit est dolore laboris commodo do est id. Proident consectetur commodo nostrud ex dolor enim laboris excepteur. Laboris cillum qui anim anim deserunt nostrud sunt est commodo duis ullamco tempor. Tempor cupidatat voluptate mollit in laboris et veniam duis elit ut sunt veniam. Ad deserunt veniam tempor veniam veniam pariatur pariatur mollit elit cupidatat occaecat ad enim ipsum.\r\n        Qui aute elit do cupidatat ullamco irure duis enim magna duis laborum ipsum. Nostrud ipsum laborum adipisicing officia excepteur dolore laborum non mollit. Est id laborum reprehenderit aute id enim adipisicing ullamco sint cillum veniam sit ex. Anim ut mollit anim do pariatur adipisicing laborum aute. Proident ipsum est deserunt ipsum Lorem cillum ad ex irure Lorem laborum. Ea non laborum pariatur Lorem non est incididunt. Velit aliquip veniam esse elit in.\r\n        </p>\r\n    </>\r\n)\r\n\r\nexport default AboutPage;","import React from 'react';\r\nimport articleContent from './article-content'\r\nimport ArticlesList from '../components/ArticlesList';\r\n\r\nconst ArticlesListPage = () => (\r\n    <>\r\n        <h1>Articles list page component</h1>\r\n        <ArticlesList articles={articleContent} />\r\n    </>\r\n);\r\n\r\nexport default ArticlesListPage;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Navbar = () => (\r\n    <nav>\r\n        <ul>\r\n            <li>\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/about\">About</Link>\r\n                <Link to=\"/articles-list\">Articles list</Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n)\r\n\r\nexport default Navbar","import React from 'react';\nimport HomePage from './pages/HomePage';\nimport ArticlePage from './pages/ArticlePage';\nimport AboutPage from './pages/AboutPage';\nimport ArticlesListPage from './pages/ArticlesListPage';\nimport { BrowserRouter as Router, Switch, Route, } from 'react-router-dom'\nimport './App.css';\nimport Navbar from './Navbar'\nimport NotFoundPage from './pages/NotFound';\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n      <Navbar />\n      <div id=\"page-body\">\n      <Switch>\n          <Route path='/' component={HomePage} exact />\n          <Route path='/about' component={AboutPage} exact />\n          <Route path='/articles-list' component={ArticlesListPage} exact />\n          <Route path='/article/:name' component={ArticlePage} exact />\n\n          <Route component={NotFoundPage} />\n        </Switch>\n      </div>\n      </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}